# Generated by uniffi-bindgen-react-native
cmake_minimum_required(VERSION 3.9.0)
project(ChiaWallet)

set (CMAKE_VERBOSE_MAKEFILE ON)
set (CMAKE_CXX_STANDARD 17)

# Resolve the path to the uniffi-bindgen-react-native package
execute_process(
    COMMAND node -p "require.resolve('uniffi-bindgen-react-native')"
    OUTPUT_VARIABLE UNIFFI_BINDGEN_PATH
    OUTPUT_STRIP_TRAILING_WHITESPACE
)
string(REGEX
  REPLACE "/typescript/src/index\\.ts$" ""
  UNIFFI_BINDGEN_PATH ${UNIFFI_BINDGEN_PATH}
)

# Specifies a path to native header files.
include_directories(
    ../cpp
    ../cpp/generated

    ${UNIFFI_BINDGEN_PATH}/cpp/includes
)

add_library(chia-wallet            SHARED
    ../cpp/chia-wallet.cpp
    ../cpp/generated/chia_wallet_sdk_uniffi.cpp
    cpp-adapter.cpp
)

# Set C++ compiler flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fexceptions")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -frtti")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fstack-protector-all")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")

cmake_path(
  SET MY_RUST_LIB
  ${CMAKE_SOURCE_DIR}/src/main/jniLibs/${ANDROID_ABI}/libchia_wallet_sdk_uniffi.a
  NORMALIZE
)
add_library(my_rust_lib STATIC IMPORTED)
set_target_properties(my_rust_lib PROPERTIES IMPORTED_LOCATION ${MY_RUST_LIB})

find_package(ReactAndroid REQUIRED CONFIG)
find_package(fbjni REQUIRED CONFIG)
find_library(LOGCAT log)

# Ideally we would just depend on `REACTNATIVE_MERGED_SO`
# See https://github.com/react-native-community/discussions-and-proposals/discussions/816
# For some reason (yet to be determined) we don't have REACTNATIVE_MERGED_SO set here.
# See https://github.com/react-native-community/discussions-and-proposals/discussions/816#discussioncomment-10659654
if (REACTNATIVE_MERGED_SO OR ReactAndroid_VERSION_MINOR GREATER_EQUAL 76)
    target_link_libraries(
        chia-wallet
        fbjni::fbjni
        ReactAndroid::jsi
        ReactAndroid::reactnative
        ${LOGCAT}
        my_rust_lib
    )
else()
    target_link_libraries(
        chia-wallet
        fbjni::fbjni
        ReactAndroid::jsi
        ReactAndroid::turbomodulejsijni
        ReactAndroid::react_nativemodule_core
        ${LOGCAT}
        my_rust_lib
    )
endif()